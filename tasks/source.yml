---

- name: Create directory for the source code {{ integrity_source_dest }}
  file: >
    state="directory"
    path="{{ integrity_source_dest }}"

- name: Download sources from {{ integrity_source_url }}/{{ integrity_source_file }}
  get_url: >
    url="{{ integrity_source_url }}/{{ integrity_source_file }}"
    dest="{{ integrity_source_dest }}/integrity-{{ integrity_source_file }}"

- name: Check existence of {{ integrity_source_dest}}/integrity-{{ integrity_source_file }}
  stat: path="{{ integrity_source_dest }}/integrity-{{ integrity_source_file }}"
  register: integrity_source_file_downloaded
  tags: integrity_source_extract

- debug: msg="integrity_source_file_downloaded {{ integrity_source_file_downloaded }}"
  when: integrity_debug|lower == "yes"
  tags: integrity_source_extract

- name: Extract sources to {{ integrity_source_dest }}
  unarchive: >
    src="{{ integrity_source_dest }}/integrity-{{ integrity_source_file }}"
    dest="{{ integrity_source_dest }}"
    remote_src="yes"
  when: integrity_source_file_downloaded.stat.exists
  tags: integrity_source_extract

- name: Create symbolic link integrity to {{ integrity_source_dir }}
  file: >
    src="{{ integrity_source_dest }}/{{ integrity_source_dir }}"
    dest="{{ integrity_source_dest }}/integrity"
    state="link"
    force="yes"
  tags: integrity_source_link

- name: Create working directory for the scripts {{ integrity_source_dest }}/integrity-work
  file: >
    state="directory"
    path="{{ integrity_source_dest }}/integrity-work"

- name: Copy script to working directory
  copy: >
    src="{{ integrity_source_dest }}/integrity/{{ item }}"
    dest="{{ integrity_source_dest }}/integrity-work"
    remote_src="yes"
  with_items:
    - integrity
  changed_when: false

- name: Which bash
  command: "which bash"
  register: integrity_which_bash
  changed_when: false

- debug: msg="Bash path = {{ integrity_which_bash.stdout }}"
  when: integrity_debug|lower == "yes"

- name: Patch {{ integrity_which_bash.stdout }} in {{ integrity_source_dest }}/integrity-work/integrity
  lineinfile: >
    dest="{{ integrity_source_dest }}/integrity-work/{{ item }}"
    regexp="#!"
    line="#!{{ integrity_which_bash.stdout }}"
  with_items:
    - integrity
  when: not ansible_check_mode
  changed_when: false

# EOF
...
